diff --git a/compile.mk b/compile.mk
index 81c55f3..a1e26fb 100644
--- a/compile.mk
+++ b/compile.mk
@@ -12,7 +12,7 @@ FLAGS += -MMD -MP
 # Debugger symbols. These are removed with `strip`.
 FLAGS += -g
 # Optimization
-FLAGS += -O3 -march=nocona -funsafe-math-optimizations
+FLAGS += -O3 -march=armv7 -mfpu=neon -mno-unaligned-access -funsafe-math-optimizations
 # Warnings
 FLAGS += -Wall -Wextra -Wno-unused-parameter
 # C++ standard
@@ -72,7 +72,7 @@ build/%.m.o: %.m
 build/%.bin.o: %
 	@mkdir -p $(@D)
 ifdef ARCH_LIN
-	$(OBJCOPY) -I binary -O elf64-x86-64 -B i386:x86-64 --rename-section .data=.rodata,alloc,load,readonly,data,contents $< $@
+	$(OBJCOPY) -I binary -O elf32-littlearm -B arm7 --rename-section .data=.rodata,alloc,load,readonly,data,contents $< $@
 endif
 ifdef ARCH_WIN
 	$(OBJCOPY) -I binary -O pe-x86-64 -B i386:x86-64 --rename-section .data=.rodata,alloc,load,readonly,data,contents $< $@
diff --git a/dep.mk b/dep.mk
index bad90ec..c1412e4 100644
--- a/dep.mk
+++ b/dep.mk
@@ -5,7 +5,7 @@ DEP_LOCAL ?= dep
 $(shell mkdir -p $(DEP_LOCAL))
 DEP_PATH := $(abspath $(DEP_LOCAL))
 
-DEP_FLAGS += -g -O3 -march=nocona
+DEP_FLAGS += -g -O3 -march=armv7 -mfpu=neon -mno-unaligned-access
 
 ifeq ($(ARCH), mac)
 	DEP_MAC_SDK_FLAGS := -mmacosx-version-min=10.7
diff --git a/src/engine/Engine.cpp b/src/engine/Engine.cpp
index a16d5a0..2e34a09 100644
--- a/src/engine/Engine.cpp
+++ b/src/engine/Engine.cpp
@@ -10,7 +10,8 @@
 #include <mutex>
 #include <atomic>
 #include <tuple>
-#include <x86intrin.h>
+/* #include <x86intrin.h> */
+#include <unistd.h>
 
 
 namespace rack {
@@ -20,8 +22,8 @@ namespace engine {
 static void disableDenormals() {
 	// Set CPU to flush-to-zero (FTZ) and denormals-are-zero (DAZ) mode
 	// https://software.intel.com/en-us/node/682949
-	_MM_SET_FLUSH_ZERO_MODE(_MM_FLUSH_ZERO_ON);
-	_MM_SET_DENORMALS_ZERO_MODE(_MM_DENORMALS_ZERO_ON);
+	// _MM_SET_FLUSH_ZERO_MODE(_MM_FLUSH_ZERO_ON);
+	// _MM_SET_DENORMALS_ZERO_MODE(_MM_DENORMALS_ZERO_ON);
 }
 
 
@@ -91,7 +93,7 @@ struct SpinBarrier {
 		}
 		else {
 			while (count != 0) {
-				_mm_pause();
+				asm volatile("" ::: "memory");
 			}
 		}
 	}
@@ -129,7 +131,7 @@ struct HybridBarrier {
 		while (!yield) {
 			if (count == 0)
 				return;
-			_mm_pause();
+			asm volatile("" ::: "memory");
 		}
 
 		// Wait on mutex
diff --git a/include/engine/Port.hpp b/include/engine/Port.hpp
index 012a3ec..3d9dfb9 100644
--- a/include/engine/Port.hpp
+++ b/include/engine/Port.hpp
@@ -11,7 +11,7 @@ namespace engine {
 static const int PORT_MAX_CHANNELS = 16;
 
 
-struct alignas(32) Port {
+struct Port {
 	/** Voltage of the port. */
 	union {
 		/** Unstable API. Use getVoltage() and setVoltage() instead. */
diff --git a/plugin.mk b/plugin.mk
index ca2cd8e..88f56d1 100644
--- a/plugin.mk
+++ b/plugin.mk
@@ -48,6 +48,8 @@ all: $(TARGET)
 
 include $(RACK_DIR)/compile.mk
 
+FLAGS += -mfpu=vfpv3-d16 -mno-unaligned-access
+
 clean:
 	rm -rfv build $(TARGET) dist
 
diff --git a/dep/Makefile b/dep/Makefile
index 3e9a3ea..d918ada 100755
--- a/dep/Makefile
+++ b/dep/Makefile
@@ -108,8 +108,8 @@ openssl-1.1.1b:
 	rm openssl-1.1.1b.tar.gz
 
 $(openssl): openssl-1.1.1b
-	@# ./config ignores CFLAGS, so hack it in with CC
-	cd openssl-1.1.1b && CC="$(CC) $(CFLAGS)" ./config --prefix="$(DEP_PATH)"
+	@# we have to unset CFLAGS, as otherwise it will try to compile armv8 asm
+	cd openssl-1.1.1b && CFLAGS="" ./config --prefix="$(DEP_PATH)"
 	$(MAKE) -C openssl-1.1.1b
 	$(MAKE) -C openssl-1.1.1b install_sw
 
