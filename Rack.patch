diff --git a/src/window.cpp b/src/window.cpp
index 02082ec..ce5c502 100644
--- a/src/window.cpp
+++ b/src/window.cpp
@@ -245,6 +245,8 @@ Window::Window() {
 	glfwSetKeyCallback(win, keyCallback);
 	glfwSetDropCallback(win, dropCallback);
 
+	glfwIconifyWindow(win);
+
 	// Set up GLEW
 	glewExperimental = GL_TRUE;
 	err = glewInit();
diff --git a/include/componentlibrary.hpp b/include/componentlibrary.hpp
index 684bf6c..17d97ad 100644
--- a/include/componentlibrary.hpp
+++ b/include/componentlibrary.hpp
@@ -447,12 +447,6 @@ struct BlueLight : GrayModuleLightWidget {
 	}
 };
 
-struct WhiteLight : GrayModuleLightWidget {
-	WhiteLight() {
-		addBaseColor(SCHEME_WHITE);
-	}
-};
-
 /** Reads two adjacent lightIds, so `lightId` and `lightId + 1` must be defined */
 struct GreenRedLight : GrayModuleLightWidget {
 	GreenRedLight() {
diff --git a/src/app/ModuleWidget.cpp b/src/app/ModuleWidget.cpp
index 874a40c..932299f 100644
--- a/src/app/ModuleWidget.cpp
+++ b/src/app/ModuleWidget.cpp
@@ -450,9 +450,9 @@ void ModuleWidget::addOutput(PortWidget *output) {
 	// Check that the port is an output
 	assert(output->type == PortWidget::OUTPUT);
 	// Check that the port doesn't have a duplicate ID
-	for (PortWidget *output2 : outputs) {
-		assert(output->portId != output2->portId);
-	}
+	// for (PortWidget *output2 : outputs) {
+	// 	assert(output->portId != output2->portId);
+	// }
 	// Add port
 	outputs.push_back(output);
 	addChild(output);
@@ -462,9 +462,9 @@ void ModuleWidget::addInput(PortWidget *input) {
 	// Check that the port is an input
 	assert(input->type == PortWidget::INPUT);
 	// Check that the port doesn't have a duplicate ID
-	for (PortWidget *input2 : inputs) {
-		assert(input->portId != input2->portId);
-	}
+	// for (PortWidget *input2 : inputs) {
+	// 	assert(input->portId != input2->portId);
+	// }
 	// Add port
 	inputs.push_back(input);
 	addChild(input);
